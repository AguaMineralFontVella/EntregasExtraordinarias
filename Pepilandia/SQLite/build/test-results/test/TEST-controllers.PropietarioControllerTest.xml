<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="controllers.PropietarioControllerTest" tests="5" skipped="0" failures="0" errors="0" timestamp="2023-06-19T02:59:49" hostname="LAPTOPAMEBA" time="0.454">
  <properties/>
  <testcase name="delete()" classname="controllers.PropietarioControllerTest" time="0.121"/>
  <testcase name="findAll()" classname="controllers.PropietarioControllerTest" time="0.055"/>
  <testcase name="update()" classname="controllers.PropietarioControllerTest" time="0.093"/>
  <testcase name="findById()" classname="controllers.PropietarioControllerTest" time="0.025"/>
  <testcase name="save()" classname="controllers.PropietarioControllerTest" time="0.023"/>
  <system-out><![CDATA[/C:/Users/Sergio/Desktop/FP/2o/EntregasExtraordinarias/Pepilandia/SQLite/build/resources/main/config.properties
04:59:49.544 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
--init-sql--
DROP TABLE IF EXISTS Trabajador

DROP TABLE IF EXISTS Informe

DROP TABLE IF EXISTS Especialidad

DROP TABLE IF EXISTS Propietario

DROP TABLE IF EXISTS Vehiculo

DROP TABLE IF EXISTS Cita

-- Tabla Especialidad
CREATE TABLE IF NOT EXISTS Especialidad (
    nombre VARCHAR(20) PRIMARY KEY,
    salario_base DECIMAL(10, 2)
)

-- Insertar datos en la tabla Especialidad
INSERT INTO Especialidad (nombre, salario_base) VALUES
    ('ELECTRICIDAD', 1800),
    ('MOTOR', 1700),
    ('MECANICA', 1600),
    ('INTERIOR', 1750)

-- Tabla Propietario
CREATE TABLE Propietario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dni VARCHAR(9),
    nombre VARCHAR(30),
    apellidos VARCHAR(100),
    telefono VARCHAR(20)
)

-- Tabla Vehiculo
CREATE TABLE IF NOT EXISTS Vehiculo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    marca VARCHAR(50),
    modelo VARCHAR(50),
    matricula VARCHAR(10),
    fecha_matriculacion DATE,
    fecha_ultima_revision DATE,
    dni_propietario VARCHAR(9),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

-- Tabla Trabajador
CREATE TABLE IF NOT EXISTS Trabajador (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre VARCHAR(30),
    telefono VARCHAR(20),
    email VARCHAR(100),
    nombreUsuario VARCHAR(20),
    password VARCHAR(100),
    especialidad_trabajador VARCHAR(20),
    isResponsable INTEGER,
    salario DECIMAL(10, 2),
    fecha_contratacion DATE,
    FOREIGN KEY (especialidad_trabajador) REFERENCES Especialidad(nombre)
)

-- Tabla Cita
CREATE TABLE IF NOT EXISTS Cita (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_trabajador INTEGER,
    id_vehiculo INTEGER,
    fecha DATETIME,
    hora VARCHAR(5),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id)
)

-- Tabla Informe
CREATE TABLE IF NOT EXISTS Informe (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    frenado DECIMAL(2, 2),
    frenadoIsApto INTEGER,
    contaminacion DECIMAL(2, 2),
    lucesIsApto INTEGER,
    id_cita INTEGER,
    id_trabajador INTEGER,
    id_vehiculo INT,
    dni_propietario VARCHAR(9),
    isFavorable INTEGER,
    FOREIGN KEY (id_cita) REFERENCES Cita(id),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

04:59:49.574 [Test worker] INFO db.DatabaseManager - Datos iniciales cargados
04:59:49.588 [Test worker] INFO controllers.PropietarioController - Encontrando todos los propietarios
04:59:49.588 [Test worker] DEBUG db.DatabaseManager - Conexión a la Base de Datos ya establecida
04:59:49.588 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario con parámetros: []
04:59:49.589 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:49.633 [Test worker] DEBUG validators.PropietarioValidator - validar: Propietario(id=1, dni=12345678A, nombre=Pepe, apellidos=Perez, telefono=832464754)
04:59:49.637 [Test worker] INFO controllers.PropietarioController -  ? El propietario es válido, guardando propietario: Propietario(id=1, dni=12345678A, nombre=Pepe, apellidos=Perez, telefono=832464754)
04:59:49.642 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:49.643 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: INSERT INTO propietario(dni, nombre, apellidos, telefono) VALUES (?, ?, ?, ?) con parámetros: [12345678A, Pepe, Perez, 832464754]
04:59:49.655 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:49.660 [Test worker] INFO controllers.PropietarioController - Propietario guardado: Propietario(id=1, dni=12345678A, nombre=Pepe, apellidos=Perez, telefono=832464754)
04:59:49.663 [Test worker] INFO controllers.PropietarioController - Encontrando propietario por id: 1
04:59:49.667 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:49.668 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario WHERE id = ? con parámetros: [1]
04:59:49.669 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:49.672 [Test worker] INFO controllers.PropietarioController - Propietario encontrado: Propietario(id=1, dni=12345678A, nombre=Pepe, apellidos=Perez, telefono=832464754)
04:59:49.675 [Test worker] INFO controllers.PropietarioController - Eliminando propietario: Propietario(id=1, dni=12345678A, nombre=Pepe, apellidos=Perez, telefono=832464754)
04:59:49.678 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:49.678 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: DELETE FROM propietario WHERE id = ? con parámetros: [1]
04:59:49.687 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:49.689 [Test worker] INFO controllers.PropietarioController - Propietario eliminado: true
04:59:49.690 [Test worker] INFO controllers.PropietarioController - Encontrando propietario por id: 1
04:59:49.694 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:49.695 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario WHERE id = ? con parámetros: [1]
04:59:49.695 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
/C:/Users/Sergio/Desktop/FP/2o/EntregasExtraordinarias/Pepilandia/SQLite/build/resources/main/config.properties
04:59:49.701 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
--init-sql--
DROP TABLE IF EXISTS Trabajador

DROP TABLE IF EXISTS Informe

DROP TABLE IF EXISTS Especialidad

DROP TABLE IF EXISTS Propietario

DROP TABLE IF EXISTS Vehiculo

DROP TABLE IF EXISTS Cita

-- Tabla Especialidad
CREATE TABLE IF NOT EXISTS Especialidad (
    nombre VARCHAR(20) PRIMARY KEY,
    salario_base DECIMAL(10, 2)
)

-- Insertar datos en la tabla Especialidad
INSERT INTO Especialidad (nombre, salario_base) VALUES
    ('ELECTRICIDAD', 1800),
    ('MOTOR', 1700),
    ('MECANICA', 1600),
    ('INTERIOR', 1750)

-- Tabla Propietario
CREATE TABLE Propietario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dni VARCHAR(9),
    nombre VARCHAR(30),
    apellidos VARCHAR(100),
    telefono VARCHAR(20)
)

-- Tabla Vehiculo
CREATE TABLE IF NOT EXISTS Vehiculo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    marca VARCHAR(50),
    modelo VARCHAR(50),
    matricula VARCHAR(10),
    fecha_matriculacion DATE,
    fecha_ultima_revision DATE,
    dni_propietario VARCHAR(9),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

-- Tabla Trabajador
CREATE TABLE IF NOT EXISTS Trabajador (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre VARCHAR(30),
    telefono VARCHAR(20),
    email VARCHAR(100),
    nombreUsuario VARCHAR(20),
    password VARCHAR(100),
    especialidad_trabajador VARCHAR(20),
    isResponsable INTEGER,
    salario DECIMAL(10, 2),
    fecha_contratacion DATE,
    FOREIGN KEY (especialidad_trabajador) REFERENCES Especialidad(nombre)
)

-- Tabla Cita
CREATE TABLE IF NOT EXISTS Cita (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_trabajador INTEGER,
    id_vehiculo INTEGER,
    fecha DATETIME,
    hora VARCHAR(5),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id)
)

-- Tabla Informe
CREATE TABLE IF NOT EXISTS Informe (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    frenado DECIMAL(2, 2),
    frenadoIsApto INTEGER,
    contaminacion DECIMAL(2, 2),
    lucesIsApto INTEGER,
    id_cita INTEGER,
    id_trabajador INTEGER,
    id_vehiculo INT,
    dni_propietario VARCHAR(9),
    isFavorable INTEGER,
    FOREIGN KEY (id_cita) REFERENCES Cita(id),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

04:59:49.728 [Test worker] INFO db.DatabaseManager - Datos iniciales cargados
04:59:49.729 [Test worker] INFO controllers.PropietarioController - Encontrando todos los propietarios
04:59:49.730 [Test worker] DEBUG db.DatabaseManager - Conexión a la Base de Datos ya establecida
04:59:49.730 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario con parámetros: []
04:59:49.731 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:49.731 [Test worker] DEBUG validators.PropietarioValidator - validar: Propietario(id=1, dni=12345678A, nombre=Pepe, apellidos=Perez, telefono=832464754)
04:59:49.731 [Test worker] INFO controllers.PropietarioController -  ? El propietario es válido, guardando propietario: Propietario(id=1, dni=12345678A, nombre=Pepe, apellidos=Perez, telefono=832464754)
04:59:49.744 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:49.745 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: INSERT INTO propietario(dni, nombre, apellidos, telefono) VALUES (?, ?, ?, ?) con parámetros: [12345678A, Pepe, Perez, 832464754]
04:59:49.770 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:49.771 [Test worker] INFO controllers.PropietarioController - Propietario guardado: Propietario(id=1, dni=12345678A, nombre=Pepe, apellidos=Perez, telefono=832464754)
04:59:49.771 [Test worker] INFO controllers.PropietarioController - Encontrando todos los propietarios
04:59:49.774 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:49.774 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario con parámetros: []
04:59:49.775 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:49.783 [Test worker] INFO controllers.PropietarioController - Propietarios encontrados: [Propietario(id=1, dni=12345678A, nombre=Pepe, apellidos=Perez, telefono=832464754)]
/C:/Users/Sergio/Desktop/FP/2o/EntregasExtraordinarias/Pepilandia/SQLite/build/resources/main/config.properties
04:59:49.792 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
--init-sql--
DROP TABLE IF EXISTS Trabajador

DROP TABLE IF EXISTS Informe

DROP TABLE IF EXISTS Especialidad

DROP TABLE IF EXISTS Propietario

DROP TABLE IF EXISTS Vehiculo

DROP TABLE IF EXISTS Cita

-- Tabla Especialidad
CREATE TABLE IF NOT EXISTS Especialidad (
    nombre VARCHAR(20) PRIMARY KEY,
    salario_base DECIMAL(10, 2)
)

-- Insertar datos en la tabla Especialidad
INSERT INTO Especialidad (nombre, salario_base) VALUES
    ('ELECTRICIDAD', 1800),
    ('MOTOR', 1700),
    ('MECANICA', 1600),
    ('INTERIOR', 1750)

-- Tabla Propietario
CREATE TABLE Propietario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dni VARCHAR(9),
    nombre VARCHAR(30),
    apellidos VARCHAR(100),
    telefono VARCHAR(20)
)

-- Tabla Vehiculo
CREATE TABLE IF NOT EXISTS Vehiculo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    marca VARCHAR(50),
    modelo VARCHAR(50),
    matricula VARCHAR(10),
    fecha_matriculacion DATE,
    fecha_ultima_revision DATE,
    dni_propietario VARCHAR(9),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

-- Tabla Trabajador
CREATE TABLE IF NOT EXISTS Trabajador (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre VARCHAR(30),
    telefono VARCHAR(20),
    email VARCHAR(100),
    nombreUsuario VARCHAR(20),
    password VARCHAR(100),
    especialidad_trabajador VARCHAR(20),
    isResponsable INTEGER,
    salario DECIMAL(10, 2),
    fecha_contratacion DATE,
    FOREIGN KEY (especialidad_trabajador) REFERENCES Especialidad(nombre)
)

-- Tabla Cita
CREATE TABLE IF NOT EXISTS Cita (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_trabajador INTEGER,
    id_vehiculo INTEGER,
    fecha DATETIME,
    hora VARCHAR(5),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id)
)

-- Tabla Informe
CREATE TABLE IF NOT EXISTS Informe (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    frenado DECIMAL(2, 2),
    frenadoIsApto INTEGER,
    contaminacion DECIMAL(2, 2),
    lucesIsApto INTEGER,
    id_cita INTEGER,
    id_trabajador INTEGER,
    id_vehiculo INT,
    dni_propietario VARCHAR(9),
    isFavorable INTEGER,
    FOREIGN KEY (id_cita) REFERENCES Cita(id),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

04:59:49.815 [Test worker] INFO db.DatabaseManager - Datos iniciales cargados
04:59:49.816 [Test worker] INFO controllers.PropietarioController - Encontrando todos los propietarios
04:59:49.818 [Test worker] DEBUG db.DatabaseManager - Conexión a la Base de Datos ya establecida
04:59:49.819 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario con parámetros: []
04:59:49.821 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:49.822 [Test worker] DEBUG validators.PropietarioValidator - validar: Propietario(id=1, dni=12345678A, nombre=Pepe, apellidos=Perez, telefono=832464754)
04:59:49.822 [Test worker] INFO controllers.PropietarioController -  ? El propietario es válido, guardando propietario: Propietario(id=1, dni=12345678A, nombre=Pepe, apellidos=Perez, telefono=832464754)
04:59:49.828 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:49.829 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: INSERT INTO propietario(dni, nombre, apellidos, telefono) VALUES (?, ?, ?, ?) con parámetros: [12345678A, Pepe, Perez, 832464754]
04:59:49.833 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:49.834 [Test worker] INFO controllers.PropietarioController - Propietario guardado: Propietario(id=1, dni=12345678A, nombre=Pepe, apellidos=Perez, telefono=832464754)
04:59:49.834 [Test worker] INFO controllers.PropietarioController - Encontrando propietario por id: 1
04:59:49.838 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:49.838 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario WHERE id = ? con parámetros: [1]
04:59:49.839 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:49.839 [Test worker] INFO controllers.PropietarioController - Propietario encontrado: Propietario(id=1, dni=12345678A, nombre=Pepe, apellidos=Perez, telefono=832464754)
04:59:49.841 [Test worker] DEBUG validators.PropietarioValidator - validar: Propietario(id=1, dni=12345678B, nombre=Juan, apellidos=Perez, telefono=832464754)
04:59:49.853 [Test worker] INFO controllers.PropietarioController -  ? El propietario es válido, actualizando propietario: Propietario(id=1, dni=12345678B, nombre=Juan, apellidos=Perez, telefono=832464754)
04:59:49.860 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:49.861 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: UPDATE propietario SET dni = ?, nombre = ?, apellidos = ?, telefono = ? WHERE id = ? con parámetros: [12345678B, Juan, Perez, 832464754, 1]
04:59:49.874 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:49.895 [Test worker] INFO controllers.PropietarioController - Propietario actualizado: Propietario(id=1, dni=12345678B, nombre=Juan, apellidos=Perez, telefono=832464754)
04:59:49.895 [Test worker] INFO controllers.PropietarioController - Encontrando propietario por id: 2
04:59:49.906 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:49.907 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario WHERE id = ? con parámetros: [2]
04:59:49.908 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
/C:/Users/Sergio/Desktop/FP/2o/EntregasExtraordinarias/Pepilandia/SQLite/build/resources/main/config.properties
04:59:49.920 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
--init-sql--
DROP TABLE IF EXISTS Trabajador

DROP TABLE IF EXISTS Informe

DROP TABLE IF EXISTS Especialidad

DROP TABLE IF EXISTS Propietario

DROP TABLE IF EXISTS Vehiculo

DROP TABLE IF EXISTS Cita

-- Tabla Especialidad
CREATE TABLE IF NOT EXISTS Especialidad (
    nombre VARCHAR(20) PRIMARY KEY,
    salario_base DECIMAL(10, 2)
)

-- Insertar datos en la tabla Especialidad
INSERT INTO Especialidad (nombre, salario_base) VALUES
    ('ELECTRICIDAD', 1800),
    ('MOTOR', 1700),
    ('MECANICA', 1600),
    ('INTERIOR', 1750)

-- Tabla Propietario
CREATE TABLE Propietario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dni VARCHAR(9),
    nombre VARCHAR(30),
    apellidos VARCHAR(100),
    telefono VARCHAR(20)
)

-- Tabla Vehiculo
CREATE TABLE IF NOT EXISTS Vehiculo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    marca VARCHAR(50),
    modelo VARCHAR(50),
    matricula VARCHAR(10),
    fecha_matriculacion DATE,
    fecha_ultima_revision DATE,
    dni_propietario VARCHAR(9),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

-- Tabla Trabajador
CREATE TABLE IF NOT EXISTS Trabajador (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre VARCHAR(30),
    telefono VARCHAR(20),
    email VARCHAR(100),
    nombreUsuario VARCHAR(20),
    password VARCHAR(100),
    especialidad_trabajador VARCHAR(20),
    isResponsable INTEGER,
    salario DECIMAL(10, 2),
    fecha_contratacion DATE,
    FOREIGN KEY (especialidad_trabajador) REFERENCES Especialidad(nombre)
)

-- Tabla Cita
CREATE TABLE IF NOT EXISTS Cita (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_trabajador INTEGER,
    id_vehiculo INTEGER,
    fecha DATETIME,
    hora VARCHAR(5),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id)
)

-- Tabla Informe
CREATE TABLE IF NOT EXISTS Informe (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    frenado DECIMAL(2, 2),
    frenadoIsApto INTEGER,
    contaminacion DECIMAL(2, 2),
    lucesIsApto INTEGER,
    id_cita INTEGER,
    id_trabajador INTEGER,
    id_vehiculo INT,
    dni_propietario VARCHAR(9),
    isFavorable INTEGER,
    FOREIGN KEY (id_cita) REFERENCES Cita(id),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

04:59:49.959 [Test worker] INFO db.DatabaseManager - Datos iniciales cargados
04:59:49.961 [Test worker] INFO controllers.PropietarioController - Encontrando todos los propietarios
04:59:49.961 [Test worker] DEBUG db.DatabaseManager - Conexión a la Base de Datos ya establecida
04:59:49.962 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario con parámetros: []
04:59:49.962 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:49.962 [Test worker] DEBUG validators.PropietarioValidator - validar: Propietario(id=1, dni=12345678A, nombre=Pepe, apellidos=Perez, telefono=832464754)
04:59:49.962 [Test worker] INFO controllers.PropietarioController -  ? El propietario es válido, guardando propietario: Propietario(id=1, dni=12345678A, nombre=Pepe, apellidos=Perez, telefono=832464754)
04:59:49.966 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:49.966 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: INSERT INTO propietario(dni, nombre, apellidos, telefono) VALUES (?, ?, ?, ?) con parámetros: [12345678A, Pepe, Perez, 832464754]
04:59:49.971 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:49.971 [Test worker] INFO controllers.PropietarioController - Propietario guardado: Propietario(id=1, dni=12345678A, nombre=Pepe, apellidos=Perez, telefono=832464754)
04:59:49.971 [Test worker] INFO controllers.PropietarioController - Encontrando propietario por id: 1
04:59:49.985 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:49.986 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario WHERE id = ? con parámetros: [1]
04:59:49.986 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:49.986 [Test worker] INFO controllers.PropietarioController - Propietario encontrado: Propietario(id=1, dni=12345678A, nombre=Pepe, apellidos=Perez, telefono=832464754)
/C:/Users/Sergio/Desktop/FP/2o/EntregasExtraordinarias/Pepilandia/SQLite/build/resources/main/config.properties
04:59:49.990 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
--init-sql--
DROP TABLE IF EXISTS Trabajador

DROP TABLE IF EXISTS Informe

DROP TABLE IF EXISTS Especialidad

DROP TABLE IF EXISTS Propietario

DROP TABLE IF EXISTS Vehiculo

DROP TABLE IF EXISTS Cita

-- Tabla Especialidad
CREATE TABLE IF NOT EXISTS Especialidad (
    nombre VARCHAR(20) PRIMARY KEY,
    salario_base DECIMAL(10, 2)
)

-- Insertar datos en la tabla Especialidad
INSERT INTO Especialidad (nombre, salario_base) VALUES
    ('ELECTRICIDAD', 1800),
    ('MOTOR', 1700),
    ('MECANICA', 1600),
    ('INTERIOR', 1750)

-- Tabla Propietario
CREATE TABLE Propietario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dni VARCHAR(9),
    nombre VARCHAR(30),
    apellidos VARCHAR(100),
    telefono VARCHAR(20)
)

-- Tabla Vehiculo
CREATE TABLE IF NOT EXISTS Vehiculo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    marca VARCHAR(50),
    modelo VARCHAR(50),
    matricula VARCHAR(10),
    fecha_matriculacion DATE,
    fecha_ultima_revision DATE,
    dni_propietario VARCHAR(9),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

-- Tabla Trabajador
CREATE TABLE IF NOT EXISTS Trabajador (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre VARCHAR(30),
    telefono VARCHAR(20),
    email VARCHAR(100),
    nombreUsuario VARCHAR(20),
    password VARCHAR(100),
    especialidad_trabajador VARCHAR(20),
    isResponsable INTEGER,
    salario DECIMAL(10, 2),
    fecha_contratacion DATE,
    FOREIGN KEY (especialidad_trabajador) REFERENCES Especialidad(nombre)
)

-- Tabla Cita
CREATE TABLE IF NOT EXISTS Cita (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_trabajador INTEGER,
    id_vehiculo INTEGER,
    fecha DATETIME,
    hora VARCHAR(5),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id)
)

-- Tabla Informe
CREATE TABLE IF NOT EXISTS Informe (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    frenado DECIMAL(2, 2),
    frenadoIsApto INTEGER,
    contaminacion DECIMAL(2, 2),
    lucesIsApto INTEGER,
    id_cita INTEGER,
    id_trabajador INTEGER,
    id_vehiculo INT,
    dni_propietario VARCHAR(9),
    isFavorable INTEGER,
    FOREIGN KEY (id_cita) REFERENCES Cita(id),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

04:59:50.005 [Test worker] INFO db.DatabaseManager - Datos iniciales cargados
04:59:50.007 [Test worker] INFO controllers.PropietarioController - Encontrando todos los propietarios
04:59:50.007 [Test worker] DEBUG db.DatabaseManager - Conexión a la Base de Datos ya establecida
04:59:50.007 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario con parámetros: []
04:59:50.007 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:50.008 [Test worker] DEBUG validators.PropietarioValidator - validar: Propietario(id=1, dni=12345678A, nombre=Pepe, apellidos=Perez, telefono=832464754)
04:59:50.008 [Test worker] INFO controllers.PropietarioController -  ? El propietario es válido, guardando propietario: Propietario(id=1, dni=12345678A, nombre=Pepe, apellidos=Perez, telefono=832464754)
04:59:50.011 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:50.012 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: INSERT INTO propietario(dni, nombre, apellidos, telefono) VALUES (?, ?, ?, ?) con parámetros: [12345678A, Pepe, Perez, 832464754]
04:59:50.024 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:50.024 [Test worker] INFO controllers.PropietarioController - Propietario guardado: Propietario(id=1, dni=12345678A, nombre=Pepe, apellidos=Perez, telefono=832464754)
04:59:50.024 [Test worker] INFO controllers.PropietarioController - Encontrando propietario por id: 1
04:59:50.027 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:50.028 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario WHERE id = ? con parámetros: [1]
04:59:50.029 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:50.029 [Test worker] INFO controllers.PropietarioController - Propietario encontrado: Propietario(id=1, dni=12345678A, nombre=Pepe, apellidos=Perez, telefono=832464754)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
