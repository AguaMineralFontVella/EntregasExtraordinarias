<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="controllers.VehiculoControllerTest" tests="8" skipped="0" failures="0" errors="0" timestamp="2023-06-19T02:59:57" hostname="LAPTOPAMEBA" time="0.494">
  <properties/>
  <testcase name="delete()" classname="controllers.VehiculoControllerTest" time="0.05"/>
  <testcase name="findAll()" classname="controllers.VehiculoControllerTest" time="0.022"/>
  <testcase name="update()" classname="controllers.VehiculoControllerTest" time="0.052"/>
  <testcase name="findById()" classname="controllers.VehiculoControllerTest" time="0.026"/>
  <testcase name="save()" classname="controllers.VehiculoControllerTest" time="0.03"/>
  <testcase name="findByDniPropietario()" classname="controllers.VehiculoControllerTest" time="0.016"/>
  <testcase name="findByModelo()" classname="controllers.VehiculoControllerTest" time="0.069"/>
  <testcase name="findByMatricula()" classname="controllers.VehiculoControllerTest" time="0.016"/>
  <system-out><![CDATA[/C:/Users/Sergio/Desktop/FP/2o/EntregasExtraordinarias/Pepilandia/SQLite/build/resources/main/config.properties
04:59:57.748 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
--init-sql--
DROP TABLE IF EXISTS Trabajador

DROP TABLE IF EXISTS Informe

DROP TABLE IF EXISTS Especialidad

DROP TABLE IF EXISTS Propietario

DROP TABLE IF EXISTS Vehiculo

DROP TABLE IF EXISTS Cita

-- Tabla Especialidad
CREATE TABLE IF NOT EXISTS Especialidad (
    nombre VARCHAR(20) PRIMARY KEY,
    salario_base DECIMAL(10, 2)
)

-- Insertar datos en la tabla Especialidad
INSERT INTO Especialidad (nombre, salario_base) VALUES
    ('ELECTRICIDAD', 1800),
    ('MOTOR', 1700),
    ('MECANICA', 1600),
    ('INTERIOR', 1750)

-- Tabla Propietario
CREATE TABLE Propietario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dni VARCHAR(9),
    nombre VARCHAR(30),
    apellidos VARCHAR(100),
    telefono VARCHAR(20)
)

-- Tabla Vehiculo
CREATE TABLE IF NOT EXISTS Vehiculo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    marca VARCHAR(50),
    modelo VARCHAR(50),
    matricula VARCHAR(10),
    fecha_matriculacion DATE,
    fecha_ultima_revision DATE,
    dni_propietario VARCHAR(9),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

-- Tabla Trabajador
CREATE TABLE IF NOT EXISTS Trabajador (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre VARCHAR(30),
    telefono VARCHAR(20),
    email VARCHAR(100),
    nombreUsuario VARCHAR(20),
    password VARCHAR(100),
    especialidad_trabajador VARCHAR(20),
    isResponsable INTEGER,
    salario DECIMAL(10, 2),
    fecha_contratacion DATE,
    FOREIGN KEY (especialidad_trabajador) REFERENCES Especialidad(nombre)
)

-- Tabla Cita
CREATE TABLE IF NOT EXISTS Cita (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_trabajador INTEGER,
    id_vehiculo INTEGER,
    fecha DATETIME,
    hora VARCHAR(5),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id)
)

-- Tabla Informe
CREATE TABLE IF NOT EXISTS Informe (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    frenado DECIMAL(2, 2),
    frenadoIsApto INTEGER,
    contaminacion DECIMAL(2, 2),
    lucesIsApto INTEGER,
    id_cita INTEGER,
    id_trabajador INTEGER,
    id_vehiculo INT,
    dni_propietario VARCHAR(9),
    isFavorable INTEGER,
    FOREIGN KEY (id_cita) REFERENCES Cita(id),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

04:59:57.756 [Test worker] INFO db.DatabaseManager - Datos iniciales cargados
04:59:57.760 [Test worker] INFO controllers.VehiculoController - Encontrando todos los vehiculos
04:59:57.761 [Test worker] DEBUG db.DatabaseManager - Conexión a la Base de Datos ya establecida
04:59:57.761 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM vehiculo con parámetros: []
04:59:57.761 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:57.776 [Test worker] DEBUG validators.VehiculoValidator - validar: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:57.777 [Test worker] INFO controllers.VehiculoController -  ? El vehículo es válido, guardando vehiculo: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:57.779 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:57.779 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: INSERT INTO vehiculo (marca, modelo, matricula, fecha_matriculacion, fecha_ultima_revision, dni_propietario) VALUES (?, ?, ?, ?, ?, ?) con parámetros: [Seat, Ibiza, 2346JUT, 2019-01-01, 2020-01-01, 12345678A]
04:59:57.783 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:57.784 [Test worker] INFO controllers.VehiculoController - Vehiculo guardado: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:57.786 [Test worker] INFO controllers.VehiculoController - Encontrando vehiculo por id: 1
04:59:57.788 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:57.788 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM vehiculo WHERE id = ? con parámetros: [1]
04:59:57.789 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:57.791 [Test worker] INFO controllers.VehiculoController - Vehiculo encontrado: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:57.793 [Test worker] INFO controllers.VehiculoController - Eliminando vehiculo: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:57.795 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:57.795 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: DELETE FROM vehiculo WHERE id = ? con parámetros: [1]
04:59:57.802 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:57.804 [Test worker] INFO controllers.VehiculoController - Vehiculo eliminado: true
04:59:57.804 [Test worker] INFO controllers.VehiculoController - Encontrando vehiculo por id: 1
04:59:57.805 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:57.805 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM vehiculo WHERE id = ? con parámetros: [1]
04:59:57.806 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
/C:/Users/Sergio/Desktop/FP/2o/EntregasExtraordinarias/Pepilandia/SQLite/build/resources/main/config.properties
04:59:57.808 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
--init-sql--
DROP TABLE IF EXISTS Trabajador

DROP TABLE IF EXISTS Informe

DROP TABLE IF EXISTS Especialidad

DROP TABLE IF EXISTS Propietario

DROP TABLE IF EXISTS Vehiculo

DROP TABLE IF EXISTS Cita

-- Tabla Especialidad
CREATE TABLE IF NOT EXISTS Especialidad (
    nombre VARCHAR(20) PRIMARY KEY,
    salario_base DECIMAL(10, 2)
)

-- Insertar datos en la tabla Especialidad
INSERT INTO Especialidad (nombre, salario_base) VALUES
    ('ELECTRICIDAD', 1800),
    ('MOTOR', 1700),
    ('MECANICA', 1600),
    ('INTERIOR', 1750)

-- Tabla Propietario
CREATE TABLE Propietario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dni VARCHAR(9),
    nombre VARCHAR(30),
    apellidos VARCHAR(100),
    telefono VARCHAR(20)
)

-- Tabla Vehiculo
CREATE TABLE IF NOT EXISTS Vehiculo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    marca VARCHAR(50),
    modelo VARCHAR(50),
    matricula VARCHAR(10),
    fecha_matriculacion DATE,
    fecha_ultima_revision DATE,
    dni_propietario VARCHAR(9),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

-- Tabla Trabajador
CREATE TABLE IF NOT EXISTS Trabajador (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre VARCHAR(30),
    telefono VARCHAR(20),
    email VARCHAR(100),
    nombreUsuario VARCHAR(20),
    password VARCHAR(100),
    especialidad_trabajador VARCHAR(20),
    isResponsable INTEGER,
    salario DECIMAL(10, 2),
    fecha_contratacion DATE,
    FOREIGN KEY (especialidad_trabajador) REFERENCES Especialidad(nombre)
)

-- Tabla Cita
CREATE TABLE IF NOT EXISTS Cita (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_trabajador INTEGER,
    id_vehiculo INTEGER,
    fecha DATETIME,
    hora VARCHAR(5),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id)
)

-- Tabla Informe
CREATE TABLE IF NOT EXISTS Informe (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    frenado DECIMAL(2, 2),
    frenadoIsApto INTEGER,
    contaminacion DECIMAL(2, 2),
    lucesIsApto INTEGER,
    id_cita INTEGER,
    id_trabajador INTEGER,
    id_vehiculo INT,
    dni_propietario VARCHAR(9),
    isFavorable INTEGER,
    FOREIGN KEY (id_cita) REFERENCES Cita(id),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

04:59:57.817 [Test worker] INFO db.DatabaseManager - Datos iniciales cargados
04:59:57.826 [Test worker] INFO controllers.VehiculoController - Encontrando todos los vehiculos
04:59:57.826 [Test worker] DEBUG db.DatabaseManager - Conexión a la Base de Datos ya establecida
04:59:57.827 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM vehiculo con parámetros: []
04:59:57.828 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:57.828 [Test worker] DEBUG validators.VehiculoValidator - validar: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:57.828 [Test worker] INFO controllers.VehiculoController -  ? El vehículo es válido, guardando vehiculo: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:57.830 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:57.830 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: INSERT INTO vehiculo (marca, modelo, matricula, fecha_matriculacion, fecha_ultima_revision, dni_propietario) VALUES (?, ?, ?, ?, ?, ?) con parámetros: [Seat, Ibiza, 2346JUT, 2019-01-01, 2020-01-01, 12345678A]
04:59:57.839 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:57.839 [Test worker] INFO controllers.VehiculoController - Vehiculo guardado: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:57.839 [Test worker] INFO controllers.VehiculoController - Encontrando todos los vehiculos
04:59:57.841 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:57.842 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM vehiculo con parámetros: []
04:59:57.842 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:57.846 [Test worker] INFO controllers.VehiculoController - Vehiculos encontrados: [Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)]
/C:/Users/Sergio/Desktop/FP/2o/EntregasExtraordinarias/Pepilandia/SQLite/build/resources/main/config.properties
04:59:57.853 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
--init-sql--
DROP TABLE IF EXISTS Trabajador

DROP TABLE IF EXISTS Informe

DROP TABLE IF EXISTS Especialidad

DROP TABLE IF EXISTS Propietario

DROP TABLE IF EXISTS Vehiculo

DROP TABLE IF EXISTS Cita

-- Tabla Especialidad
CREATE TABLE IF NOT EXISTS Especialidad (
    nombre VARCHAR(20) PRIMARY KEY,
    salario_base DECIMAL(10, 2)
)

-- Insertar datos en la tabla Especialidad
INSERT INTO Especialidad (nombre, salario_base) VALUES
    ('ELECTRICIDAD', 1800),
    ('MOTOR', 1700),
    ('MECANICA', 1600),
    ('INTERIOR', 1750)

-- Tabla Propietario
CREATE TABLE Propietario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dni VARCHAR(9),
    nombre VARCHAR(30),
    apellidos VARCHAR(100),
    telefono VARCHAR(20)
)

-- Tabla Vehiculo
CREATE TABLE IF NOT EXISTS Vehiculo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    marca VARCHAR(50),
    modelo VARCHAR(50),
    matricula VARCHAR(10),
    fecha_matriculacion DATE,
    fecha_ultima_revision DATE,
    dni_propietario VARCHAR(9),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

-- Tabla Trabajador
CREATE TABLE IF NOT EXISTS Trabajador (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre VARCHAR(30),
    telefono VARCHAR(20),
    email VARCHAR(100),
    nombreUsuario VARCHAR(20),
    password VARCHAR(100),
    especialidad_trabajador VARCHAR(20),
    isResponsable INTEGER,
    salario DECIMAL(10, 2),
    fecha_contratacion DATE,
    FOREIGN KEY (especialidad_trabajador) REFERENCES Especialidad(nombre)
)

-- Tabla Cita
CREATE TABLE IF NOT EXISTS Cita (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_trabajador INTEGER,
    id_vehiculo INTEGER,
    fecha DATETIME,
    hora VARCHAR(5),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id)
)

-- Tabla Informe
CREATE TABLE IF NOT EXISTS Informe (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    frenado DECIMAL(2, 2),
    frenadoIsApto INTEGER,
    contaminacion DECIMAL(2, 2),
    lucesIsApto INTEGER,
    id_cita INTEGER,
    id_trabajador INTEGER,
    id_vehiculo INT,
    dni_propietario VARCHAR(9),
    isFavorable INTEGER,
    FOREIGN KEY (id_cita) REFERENCES Cita(id),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

04:59:57.864 [Test worker] INFO db.DatabaseManager - Datos iniciales cargados
04:59:57.865 [Test worker] INFO controllers.VehiculoController - Encontrando todos los vehiculos
04:59:57.865 [Test worker] DEBUG db.DatabaseManager - Conexión a la Base de Datos ya establecida
04:59:57.866 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM vehiculo con parámetros: []
04:59:57.866 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:57.867 [Test worker] DEBUG validators.VehiculoValidator - validar: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:57.867 [Test worker] INFO controllers.VehiculoController -  ? El vehículo es válido, guardando vehiculo: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:57.870 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:57.870 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: INSERT INTO vehiculo (marca, modelo, matricula, fecha_matriculacion, fecha_ultima_revision, dni_propietario) VALUES (?, ?, ?, ?, ?, ?) con parámetros: [Seat, Ibiza, 2346JUT, 2019-01-01, 2020-01-01, 12345678A]
04:59:57.878 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:57.878 [Test worker] INFO controllers.VehiculoController - Vehiculo guardado: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:57.878 [Test worker] INFO controllers.VehiculoController - Encontrando vehiculo por id: 1
04:59:57.880 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:57.880 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM vehiculo WHERE id = ? con parámetros: [1]
04:59:57.884 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:57.885 [Test worker] INFO controllers.VehiculoController - Vehiculo encontrado: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:57.885 [Test worker] DEBUG validators.VehiculoValidator - validar: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=MAR223, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678B)
04:59:57.891 [Test worker] INFO controllers.VehiculoController -  ? El vehículo es válido, actualizando vehiculo: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=MAR223, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678B)
04:59:57.895 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:57.895 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: UPDATE vehiculo SET marca = ?, modelo = ?, matricula = ?, fecha_matriculacion = ?, fecha_ultima_revision = ?, dni_propietario = ? WHERE id = ? con parámetros: [Seat, Ibiza, MAR223, 2019-01-01, 2020-01-01, 12345678B, 1]
04:59:57.909 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:57.912 [Test worker] INFO controllers.VehiculoController - Vehiculo actualizado: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=MAR223, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678B)
04:59:57.912 [Test worker] INFO controllers.VehiculoController - Encontrando vehiculo por id: 2
04:59:57.915 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:57.915 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM vehiculo WHERE id = ? con parámetros: [2]
04:59:57.916 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
/C:/Users/Sergio/Desktop/FP/2o/EntregasExtraordinarias/Pepilandia/SQLite/build/resources/main/config.properties
04:59:57.919 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
--init-sql--
DROP TABLE IF EXISTS Trabajador

DROP TABLE IF EXISTS Informe

DROP TABLE IF EXISTS Especialidad

DROP TABLE IF EXISTS Propietario

DROP TABLE IF EXISTS Vehiculo

DROP TABLE IF EXISTS Cita

-- Tabla Especialidad
CREATE TABLE IF NOT EXISTS Especialidad (
    nombre VARCHAR(20) PRIMARY KEY,
    salario_base DECIMAL(10, 2)
)

-- Insertar datos en la tabla Especialidad
INSERT INTO Especialidad (nombre, salario_base) VALUES
    ('ELECTRICIDAD', 1800),
    ('MOTOR', 1700),
    ('MECANICA', 1600),
    ('INTERIOR', 1750)

-- Tabla Propietario
CREATE TABLE Propietario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dni VARCHAR(9),
    nombre VARCHAR(30),
    apellidos VARCHAR(100),
    telefono VARCHAR(20)
)

-- Tabla Vehiculo
CREATE TABLE IF NOT EXISTS Vehiculo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    marca VARCHAR(50),
    modelo VARCHAR(50),
    matricula VARCHAR(10),
    fecha_matriculacion DATE,
    fecha_ultima_revision DATE,
    dni_propietario VARCHAR(9),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

-- Tabla Trabajador
CREATE TABLE IF NOT EXISTS Trabajador (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre VARCHAR(30),
    telefono VARCHAR(20),
    email VARCHAR(100),
    nombreUsuario VARCHAR(20),
    password VARCHAR(100),
    especialidad_trabajador VARCHAR(20),
    isResponsable INTEGER,
    salario DECIMAL(10, 2),
    fecha_contratacion DATE,
    FOREIGN KEY (especialidad_trabajador) REFERENCES Especialidad(nombre)
)

-- Tabla Cita
CREATE TABLE IF NOT EXISTS Cita (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_trabajador INTEGER,
    id_vehiculo INTEGER,
    fecha DATETIME,
    hora VARCHAR(5),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id)
)

-- Tabla Informe
CREATE TABLE IF NOT EXISTS Informe (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    frenado DECIMAL(2, 2),
    frenadoIsApto INTEGER,
    contaminacion DECIMAL(2, 2),
    lucesIsApto INTEGER,
    id_cita INTEGER,
    id_trabajador INTEGER,
    id_vehiculo INT,
    dni_propietario VARCHAR(9),
    isFavorable INTEGER,
    FOREIGN KEY (id_cita) REFERENCES Cita(id),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

04:59:57.951 [Test worker] INFO db.DatabaseManager - Datos iniciales cargados
04:59:57.953 [Test worker] INFO controllers.VehiculoController - Encontrando todos los vehiculos
04:59:57.954 [Test worker] DEBUG db.DatabaseManager - Conexión a la Base de Datos ya establecida
04:59:57.954 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM vehiculo con parámetros: []
04:59:57.955 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:57.955 [Test worker] DEBUG validators.VehiculoValidator - validar: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:57.955 [Test worker] INFO controllers.VehiculoController -  ? El vehículo es válido, guardando vehiculo: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:57.958 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:57.958 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: INSERT INTO vehiculo (marca, modelo, matricula, fecha_matriculacion, fecha_ultima_revision, dni_propietario) VALUES (?, ?, ?, ?, ?, ?) con parámetros: [Seat, Ibiza, 2346JUT, 2019-01-01, 2020-01-01, 12345678A]
04:59:57.969 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:57.970 [Test worker] INFO controllers.VehiculoController - Vehiculo guardado: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:57.971 [Test worker] INFO controllers.VehiculoController - Encontrando vehiculo por id: 1
04:59:57.977 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:57.977 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM vehiculo WHERE id = ? con parámetros: [1]
04:59:57.978 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:57.978 [Test worker] INFO controllers.VehiculoController - Vehiculo encontrado: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
/C:/Users/Sergio/Desktop/FP/2o/EntregasExtraordinarias/Pepilandia/SQLite/build/resources/main/config.properties
04:59:57.992 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
--init-sql--
DROP TABLE IF EXISTS Trabajador

DROP TABLE IF EXISTS Informe

DROP TABLE IF EXISTS Especialidad

DROP TABLE IF EXISTS Propietario

DROP TABLE IF EXISTS Vehiculo

DROP TABLE IF EXISTS Cita

-- Tabla Especialidad
CREATE TABLE IF NOT EXISTS Especialidad (
    nombre VARCHAR(20) PRIMARY KEY,
    salario_base DECIMAL(10, 2)
)

-- Insertar datos en la tabla Especialidad
INSERT INTO Especialidad (nombre, salario_base) VALUES
    ('ELECTRICIDAD', 1800),
    ('MOTOR', 1700),
    ('MECANICA', 1600),
    ('INTERIOR', 1750)

-- Tabla Propietario
CREATE TABLE Propietario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dni VARCHAR(9),
    nombre VARCHAR(30),
    apellidos VARCHAR(100),
    telefono VARCHAR(20)
)

-- Tabla Vehiculo
CREATE TABLE IF NOT EXISTS Vehiculo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    marca VARCHAR(50),
    modelo VARCHAR(50),
    matricula VARCHAR(10),
    fecha_matriculacion DATE,
    fecha_ultima_revision DATE,
    dni_propietario VARCHAR(9),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

-- Tabla Trabajador
CREATE TABLE IF NOT EXISTS Trabajador (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre VARCHAR(30),
    telefono VARCHAR(20),
    email VARCHAR(100),
    nombreUsuario VARCHAR(20),
    password VARCHAR(100),
    especialidad_trabajador VARCHAR(20),
    isResponsable INTEGER,
    salario DECIMAL(10, 2),
    fecha_contratacion DATE,
    FOREIGN KEY (especialidad_trabajador) REFERENCES Especialidad(nombre)
)

-- Tabla Cita
CREATE TABLE IF NOT EXISTS Cita (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_trabajador INTEGER,
    id_vehiculo INTEGER,
    fecha DATETIME,
    hora VARCHAR(5),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id)
)

-- Tabla Informe
CREATE TABLE IF NOT EXISTS Informe (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    frenado DECIMAL(2, 2),
    frenadoIsApto INTEGER,
    contaminacion DECIMAL(2, 2),
    lucesIsApto INTEGER,
    id_cita INTEGER,
    id_trabajador INTEGER,
    id_vehiculo INT,
    dni_propietario VARCHAR(9),
    isFavorable INTEGER,
    FOREIGN KEY (id_cita) REFERENCES Cita(id),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

04:59:58.011 [Test worker] INFO db.DatabaseManager - Datos iniciales cargados
04:59:58.012 [Test worker] INFO controllers.VehiculoController - Encontrando todos los vehiculos
04:59:58.012 [Test worker] DEBUG db.DatabaseManager - Conexión a la Base de Datos ya establecida
04:59:58.013 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM vehiculo con parámetros: []
04:59:58.013 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.013 [Test worker] DEBUG validators.VehiculoValidator - validar: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:58.013 [Test worker] INFO controllers.VehiculoController -  ? El vehículo es válido, guardando vehiculo: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:58.024 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:58.024 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: INSERT INTO vehiculo (marca, modelo, matricula, fecha_matriculacion, fecha_ultima_revision, dni_propietario) VALUES (?, ?, ?, ?, ?, ?) con parámetros: [Seat, Ibiza, 2346JUT, 2019-01-01, 2020-01-01, 12345678A]
04:59:58.034 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.034 [Test worker] INFO controllers.VehiculoController - Vehiculo guardado: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:58.034 [Test worker] INFO controllers.VehiculoController - Encontrando vehiculo por id: 1
04:59:58.037 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:58.037 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM vehiculo WHERE id = ? con parámetros: [1]
04:59:58.040 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.041 [Test worker] INFO controllers.VehiculoController - Vehiculo encontrado: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
/C:/Users/Sergio/Desktop/FP/2o/EntregasExtraordinarias/Pepilandia/SQLite/build/resources/main/config.properties
04:59:58.047 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
--init-sql--
DROP TABLE IF EXISTS Trabajador

DROP TABLE IF EXISTS Informe

DROP TABLE IF EXISTS Especialidad

DROP TABLE IF EXISTS Propietario

DROP TABLE IF EXISTS Vehiculo

DROP TABLE IF EXISTS Cita

-- Tabla Especialidad
CREATE TABLE IF NOT EXISTS Especialidad (
    nombre VARCHAR(20) PRIMARY KEY,
    salario_base DECIMAL(10, 2)
)

-- Insertar datos en la tabla Especialidad
INSERT INTO Especialidad (nombre, salario_base) VALUES
    ('ELECTRICIDAD', 1800),
    ('MOTOR', 1700),
    ('MECANICA', 1600),
    ('INTERIOR', 1750)

-- Tabla Propietario
CREATE TABLE Propietario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dni VARCHAR(9),
    nombre VARCHAR(30),
    apellidos VARCHAR(100),
    telefono VARCHAR(20)
)

-- Tabla Vehiculo
CREATE TABLE IF NOT EXISTS Vehiculo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    marca VARCHAR(50),
    modelo VARCHAR(50),
    matricula VARCHAR(10),
    fecha_matriculacion DATE,
    fecha_ultima_revision DATE,
    dni_propietario VARCHAR(9),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

-- Tabla Trabajador
CREATE TABLE IF NOT EXISTS Trabajador (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre VARCHAR(30),
    telefono VARCHAR(20),
    email VARCHAR(100),
    nombreUsuario VARCHAR(20),
    password VARCHAR(100),
    especialidad_trabajador VARCHAR(20),
    isResponsable INTEGER,
    salario DECIMAL(10, 2),
    fecha_contratacion DATE,
    FOREIGN KEY (especialidad_trabajador) REFERENCES Especialidad(nombre)
)

-- Tabla Cita
CREATE TABLE IF NOT EXISTS Cita (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_trabajador INTEGER,
    id_vehiculo INTEGER,
    fecha DATETIME,
    hora VARCHAR(5),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id)
)

-- Tabla Informe
CREATE TABLE IF NOT EXISTS Informe (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    frenado DECIMAL(2, 2),
    frenadoIsApto INTEGER,
    contaminacion DECIMAL(2, 2),
    lucesIsApto INTEGER,
    id_cita INTEGER,
    id_trabajador INTEGER,
    id_vehiculo INT,
    dni_propietario VARCHAR(9),
    isFavorable INTEGER,
    FOREIGN KEY (id_cita) REFERENCES Cita(id),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

04:59:58.057 [Test worker] INFO db.DatabaseManager - Datos iniciales cargados
04:59:58.058 [Test worker] INFO controllers.VehiculoController - Encontrando todos los vehiculos
04:59:58.058 [Test worker] DEBUG db.DatabaseManager - Conexión a la Base de Datos ya establecida
04:59:58.059 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM vehiculo con parámetros: []
04:59:58.059 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.059 [Test worker] DEBUG validators.VehiculoValidator - validar: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:58.059 [Test worker] INFO controllers.VehiculoController -  ? El vehículo es válido, guardando vehiculo: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:58.061 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:58.061 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: INSERT INTO vehiculo (marca, modelo, matricula, fecha_matriculacion, fecha_ultima_revision, dni_propietario) VALUES (?, ?, ?, ?, ?, ?) con parámetros: [Seat, Ibiza, 2346JUT, 2019-01-01, 2020-01-01, 12345678A]
04:59:58.067 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.067 [Test worker] INFO controllers.VehiculoController - Vehiculo guardado: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:58.069 [Test worker] INFO controllers.VehiculoController - Encontrando vehiculos por dni del propietario: 12345678A
04:59:58.070 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:58.072 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM vehiculo WHERE dni_propietario = ? con parámetros: [12345678A]
04:59:58.072 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.074 [Test worker] INFO controllers.VehiculoController - Vehiculos encontrados: [Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)]
/C:/Users/Sergio/Desktop/FP/2o/EntregasExtraordinarias/Pepilandia/SQLite/build/resources/main/config.properties
04:59:58.077 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
--init-sql--
DROP TABLE IF EXISTS Trabajador

DROP TABLE IF EXISTS Informe

DROP TABLE IF EXISTS Especialidad

DROP TABLE IF EXISTS Propietario

DROP TABLE IF EXISTS Vehiculo

DROP TABLE IF EXISTS Cita

-- Tabla Especialidad
CREATE TABLE IF NOT EXISTS Especialidad (
    nombre VARCHAR(20) PRIMARY KEY,
    salario_base DECIMAL(10, 2)
)

-- Insertar datos en la tabla Especialidad
INSERT INTO Especialidad (nombre, salario_base) VALUES
    ('ELECTRICIDAD', 1800),
    ('MOTOR', 1700),
    ('MECANICA', 1600),
    ('INTERIOR', 1750)

-- Tabla Propietario
CREATE TABLE Propietario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dni VARCHAR(9),
    nombre VARCHAR(30),
    apellidos VARCHAR(100),
    telefono VARCHAR(20)
)

-- Tabla Vehiculo
CREATE TABLE IF NOT EXISTS Vehiculo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    marca VARCHAR(50),
    modelo VARCHAR(50),
    matricula VARCHAR(10),
    fecha_matriculacion DATE,
    fecha_ultima_revision DATE,
    dni_propietario VARCHAR(9),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

-- Tabla Trabajador
CREATE TABLE IF NOT EXISTS Trabajador (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre VARCHAR(30),
    telefono VARCHAR(20),
    email VARCHAR(100),
    nombreUsuario VARCHAR(20),
    password VARCHAR(100),
    especialidad_trabajador VARCHAR(20),
    isResponsable INTEGER,
    salario DECIMAL(10, 2),
    fecha_contratacion DATE,
    FOREIGN KEY (especialidad_trabajador) REFERENCES Especialidad(nombre)
)

-- Tabla Cita
CREATE TABLE IF NOT EXISTS Cita (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_trabajador INTEGER,
    id_vehiculo INTEGER,
    fecha DATETIME,
    hora VARCHAR(5),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id)
)

-- Tabla Informe
CREATE TABLE IF NOT EXISTS Informe (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    frenado DECIMAL(2, 2),
    frenadoIsApto INTEGER,
    contaminacion DECIMAL(2, 2),
    lucesIsApto INTEGER,
    id_cita INTEGER,
    id_trabajador INTEGER,
    id_vehiculo INT,
    dni_propietario VARCHAR(9),
    isFavorable INTEGER,
    FOREIGN KEY (id_cita) REFERENCES Cita(id),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

04:59:58.119 [Test worker] INFO db.DatabaseManager - Datos iniciales cargados
04:59:58.129 [Test worker] INFO controllers.VehiculoController - Encontrando todos los vehiculos
04:59:58.129 [Test worker] DEBUG db.DatabaseManager - Conexión a la Base de Datos ya establecida
04:59:58.129 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM vehiculo con parámetros: []
04:59:58.130 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.130 [Test worker] DEBUG validators.VehiculoValidator - validar: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:58.130 [Test worker] INFO controllers.VehiculoController -  ? El vehículo es válido, guardando vehiculo: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:58.134 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:58.134 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: INSERT INTO vehiculo (marca, modelo, matricula, fecha_matriculacion, fecha_ultima_revision, dni_propietario) VALUES (?, ?, ?, ?, ?, ?) con parámetros: [Seat, Ibiza, 2346JUT, 2019-01-01, 2020-01-01, 12345678A]
04:59:58.176 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.177 [Test worker] INFO controllers.VehiculoController - Vehiculo guardado: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:58.186 [Test worker] INFO controllers.VehiculoController - Encontrando vehiculo por modelo: Ibiza
04:59:58.192 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:58.192 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM vehiculo WHERE modelo = ? con parámetros: [Ibiza]
04:59:58.193 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.196 [Test worker] INFO controllers.VehiculoController - Vehiculo encontrado: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
/C:/Users/Sergio/Desktop/FP/2o/EntregasExtraordinarias/Pepilandia/SQLite/build/resources/main/config.properties
04:59:58.202 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
--init-sql--
DROP TABLE IF EXISTS Trabajador

DROP TABLE IF EXISTS Informe

DROP TABLE IF EXISTS Especialidad

DROP TABLE IF EXISTS Propietario

DROP TABLE IF EXISTS Vehiculo

DROP TABLE IF EXISTS Cita

-- Tabla Especialidad
CREATE TABLE IF NOT EXISTS Especialidad (
    nombre VARCHAR(20) PRIMARY KEY,
    salario_base DECIMAL(10, 2)
)

-- Insertar datos en la tabla Especialidad
INSERT INTO Especialidad (nombre, salario_base) VALUES
    ('ELECTRICIDAD', 1800),
    ('MOTOR', 1700),
    ('MECANICA', 1600),
    ('INTERIOR', 1750)

-- Tabla Propietario
CREATE TABLE Propietario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dni VARCHAR(9),
    nombre VARCHAR(30),
    apellidos VARCHAR(100),
    telefono VARCHAR(20)
)

-- Tabla Vehiculo
CREATE TABLE IF NOT EXISTS Vehiculo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    marca VARCHAR(50),
    modelo VARCHAR(50),
    matricula VARCHAR(10),
    fecha_matriculacion DATE,
    fecha_ultima_revision DATE,
    dni_propietario VARCHAR(9),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

-- Tabla Trabajador
CREATE TABLE IF NOT EXISTS Trabajador (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre VARCHAR(30),
    telefono VARCHAR(20),
    email VARCHAR(100),
    nombreUsuario VARCHAR(20),
    password VARCHAR(100),
    especialidad_trabajador VARCHAR(20),
    isResponsable INTEGER,
    salario DECIMAL(10, 2),
    fecha_contratacion DATE,
    FOREIGN KEY (especialidad_trabajador) REFERENCES Especialidad(nombre)
)

-- Tabla Cita
CREATE TABLE IF NOT EXISTS Cita (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_trabajador INTEGER,
    id_vehiculo INTEGER,
    fecha DATETIME,
    hora VARCHAR(5),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id)
)

-- Tabla Informe
CREATE TABLE IF NOT EXISTS Informe (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    frenado DECIMAL(2, 2),
    frenadoIsApto INTEGER,
    contaminacion DECIMAL(2, 2),
    lucesIsApto INTEGER,
    id_cita INTEGER,
    id_trabajador INTEGER,
    id_vehiculo INT,
    dni_propietario VARCHAR(9),
    isFavorable INTEGER,
    FOREIGN KEY (id_cita) REFERENCES Cita(id),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

04:59:58.233 [Test worker] INFO db.DatabaseManager - Datos iniciales cargados
04:59:58.235 [Test worker] INFO controllers.VehiculoController - Encontrando todos los vehiculos
04:59:58.235 [Test worker] DEBUG db.DatabaseManager - Conexión a la Base de Datos ya establecida
04:59:58.235 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM vehiculo con parámetros: []
04:59:58.236 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.236 [Test worker] DEBUG validators.VehiculoValidator - validar: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:58.236 [Test worker] INFO controllers.VehiculoController -  ? El vehículo es válido, guardando vehiculo: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:58.238 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:58.238 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: INSERT INTO vehiculo (marca, modelo, matricula, fecha_matriculacion, fecha_ultima_revision, dni_propietario) VALUES (?, ?, ?, ?, ?, ?) con parámetros: [Seat, Ibiza, 2346JUT, 2019-01-01, 2020-01-01, 12345678A]
04:59:58.243 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.243 [Test worker] INFO controllers.VehiculoController - Vehiculo guardado: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
04:59:58.245 [Test worker] INFO controllers.VehiculoController - Encontrando vehiculo por matricula: 2346JUT
04:59:58.247 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:58.248 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM vehiculo WHERE matricula = ? con parámetros: [2346JUT]
04:59:58.249 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.250 [Test worker] INFO controllers.VehiculoController - Vehiculo encontrado: Vehiculo(id=1, marca=Seat, modelo=Ibiza, matricula=2346JUT, fechaMatriculacion=2019-01-01, fechaUltimaRevision=2020-01-01, dniPropietario=12345678A)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
