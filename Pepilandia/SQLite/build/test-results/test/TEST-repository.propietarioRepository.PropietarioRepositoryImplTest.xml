<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="repository.propietarioRepository.PropietarioRepositoryImplTest" tests="7" skipped="0" failures="0" errors="0" timestamp="2023-06-19T02:59:58" hostname="LAPTOPAMEBA" time="0.358">
  <properties/>
  <testcase name="delete()" classname="repository.propietarioRepository.PropietarioRepositoryImplTest" time="0.045"/>
  <testcase name="findAll()" classname="repository.propietarioRepository.PropietarioRepositoryImplTest" time="0.027"/>
  <testcase name="update()" classname="repository.propietarioRepository.PropietarioRepositoryImplTest" time="0.038"/>
  <testcase name="findById()" classname="repository.propietarioRepository.PropietarioRepositoryImplTest" time="0.02"/>
  <testcase name="save()" classname="repository.propietarioRepository.PropietarioRepositoryImplTest" time="0.021"/>
  <testcase name="findByTelefono()" classname="repository.propietarioRepository.PropietarioRepositoryImplTest" time="0.021"/>
  <testcase name="findByDni()" classname="repository.propietarioRepository.PropietarioRepositoryImplTest" time="0.013"/>
  <system-out><![CDATA[/C:/Users/Sergio/Desktop/FP/2o/EntregasExtraordinarias/Pepilandia/SQLite/build/resources/main/config.properties
04:59:58.753 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
--init-sql--
DROP TABLE IF EXISTS Trabajador

DROP TABLE IF EXISTS Informe

DROP TABLE IF EXISTS Especialidad

DROP TABLE IF EXISTS Propietario

DROP TABLE IF EXISTS Vehiculo

DROP TABLE IF EXISTS Cita

-- Tabla Especialidad
CREATE TABLE IF NOT EXISTS Especialidad (
    nombre VARCHAR(20) PRIMARY KEY,
    salario_base DECIMAL(10, 2)
)

-- Insertar datos en la tabla Especialidad
INSERT INTO Especialidad (nombre, salario_base) VALUES
    ('ELECTRICIDAD', 1800),
    ('MOTOR', 1700),
    ('MECANICA', 1600),
    ('INTERIOR', 1750)

-- Tabla Propietario
CREATE TABLE Propietario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dni VARCHAR(9),
    nombre VARCHAR(30),
    apellidos VARCHAR(100),
    telefono VARCHAR(20)
)

-- Tabla Vehiculo
CREATE TABLE IF NOT EXISTS Vehiculo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    marca VARCHAR(50),
    modelo VARCHAR(50),
    matricula VARCHAR(10),
    fecha_matriculacion DATE,
    fecha_ultima_revision DATE,
    dni_propietario VARCHAR(9),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

-- Tabla Trabajador
CREATE TABLE IF NOT EXISTS Trabajador (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre VARCHAR(30),
    telefono VARCHAR(20),
    email VARCHAR(100),
    nombreUsuario VARCHAR(20),
    password VARCHAR(100),
    especialidad_trabajador VARCHAR(20),
    isResponsable INTEGER,
    salario DECIMAL(10, 2),
    fecha_contratacion DATE,
    FOREIGN KEY (especialidad_trabajador) REFERENCES Especialidad(nombre)
)

-- Tabla Cita
CREATE TABLE IF NOT EXISTS Cita (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_trabajador INTEGER,
    id_vehiculo INTEGER,
    fecha DATETIME,
    hora VARCHAR(5),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id)
)

-- Tabla Informe
CREATE TABLE IF NOT EXISTS Informe (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    frenado DECIMAL(2, 2),
    frenadoIsApto INTEGER,
    contaminacion DECIMAL(2, 2),
    lucesIsApto INTEGER,
    id_cita INTEGER,
    id_trabajador INTEGER,
    id_vehiculo INT,
    dni_propietario VARCHAR(9),
    isFavorable INTEGER,
    FOREIGN KEY (id_cita) REFERENCES Cita(id),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

04:59:58.763 [Test worker] INFO db.DatabaseManager - Datos iniciales cargados
04:59:58.764 [Test worker] DEBUG db.DatabaseManager - Conexión a la Base de Datos ya establecida
04:59:58.764 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario con parámetros: []
04:59:58.765 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.771 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:58.771 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: INSERT INTO propietario(dni, nombre, apellidos, telefono) VALUES (?, ?, ?, ?) con parámetros: [12345678A, Pepe, Perez, 832464754]
04:59:58.780 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.790 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:58.791 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario WHERE id = ? con parámetros: [1]
04:59:58.791 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.794 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:58.794 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: DELETE FROM propietario WHERE id = ? con parámetros: [1]
04:59:58.800 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.806 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:58.806 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario WHERE id = ? con parámetros: [1]
04:59:58.807 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
/C:/Users/Sergio/Desktop/FP/2o/EntregasExtraordinarias/Pepilandia/SQLite/build/resources/main/config.properties
04:59:58.817 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
--init-sql--
DROP TABLE IF EXISTS Trabajador

DROP TABLE IF EXISTS Informe

DROP TABLE IF EXISTS Especialidad

DROP TABLE IF EXISTS Propietario

DROP TABLE IF EXISTS Vehiculo

DROP TABLE IF EXISTS Cita

-- Tabla Especialidad
CREATE TABLE IF NOT EXISTS Especialidad (
    nombre VARCHAR(20) PRIMARY KEY,
    salario_base DECIMAL(10, 2)
)

-- Insertar datos en la tabla Especialidad
INSERT INTO Especialidad (nombre, salario_base) VALUES
    ('ELECTRICIDAD', 1800),
    ('MOTOR', 1700),
    ('MECANICA', 1600),
    ('INTERIOR', 1750)

-- Tabla Propietario
CREATE TABLE Propietario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dni VARCHAR(9),
    nombre VARCHAR(30),
    apellidos VARCHAR(100),
    telefono VARCHAR(20)
)

-- Tabla Vehiculo
CREATE TABLE IF NOT EXISTS Vehiculo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    marca VARCHAR(50),
    modelo VARCHAR(50),
    matricula VARCHAR(10),
    fecha_matriculacion DATE,
    fecha_ultima_revision DATE,
    dni_propietario VARCHAR(9),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

-- Tabla Trabajador
CREATE TABLE IF NOT EXISTS Trabajador (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre VARCHAR(30),
    telefono VARCHAR(20),
    email VARCHAR(100),
    nombreUsuario VARCHAR(20),
    password VARCHAR(100),
    especialidad_trabajador VARCHAR(20),
    isResponsable INTEGER,
    salario DECIMAL(10, 2),
    fecha_contratacion DATE,
    FOREIGN KEY (especialidad_trabajador) REFERENCES Especialidad(nombre)
)

-- Tabla Cita
CREATE TABLE IF NOT EXISTS Cita (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_trabajador INTEGER,
    id_vehiculo INTEGER,
    fecha DATETIME,
    hora VARCHAR(5),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id)
)

-- Tabla Informe
CREATE TABLE IF NOT EXISTS Informe (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    frenado DECIMAL(2, 2),
    frenadoIsApto INTEGER,
    contaminacion DECIMAL(2, 2),
    lucesIsApto INTEGER,
    id_cita INTEGER,
    id_trabajador INTEGER,
    id_vehiculo INT,
    dni_propietario VARCHAR(9),
    isFavorable INTEGER,
    FOREIGN KEY (id_cita) REFERENCES Cita(id),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

04:59:58.858 [Test worker] INFO db.DatabaseManager - Datos iniciales cargados
04:59:58.859 [Test worker] DEBUG db.DatabaseManager - Conexión a la Base de Datos ya establecida
04:59:58.859 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario con parámetros: []
04:59:58.860 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.871 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:58.871 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: INSERT INTO propietario(dni, nombre, apellidos, telefono) VALUES (?, ?, ?, ?) con parámetros: [12345678A, Pepe, Perez, 832464754]
04:59:58.878 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.883 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:58.884 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario con parámetros: []
04:59:58.885 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
/C:/Users/Sergio/Desktop/FP/2o/EntregasExtraordinarias/Pepilandia/SQLite/build/resources/main/config.properties
04:59:58.889 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
--init-sql--
DROP TABLE IF EXISTS Trabajador

DROP TABLE IF EXISTS Informe

DROP TABLE IF EXISTS Especialidad

DROP TABLE IF EXISTS Propietario

DROP TABLE IF EXISTS Vehiculo

DROP TABLE IF EXISTS Cita

-- Tabla Especialidad
CREATE TABLE IF NOT EXISTS Especialidad (
    nombre VARCHAR(20) PRIMARY KEY,
    salario_base DECIMAL(10, 2)
)

-- Insertar datos en la tabla Especialidad
INSERT INTO Especialidad (nombre, salario_base) VALUES
    ('ELECTRICIDAD', 1800),
    ('MOTOR', 1700),
    ('MECANICA', 1600),
    ('INTERIOR', 1750)

-- Tabla Propietario
CREATE TABLE Propietario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dni VARCHAR(9),
    nombre VARCHAR(30),
    apellidos VARCHAR(100),
    telefono VARCHAR(20)
)

-- Tabla Vehiculo
CREATE TABLE IF NOT EXISTS Vehiculo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    marca VARCHAR(50),
    modelo VARCHAR(50),
    matricula VARCHAR(10),
    fecha_matriculacion DATE,
    fecha_ultima_revision DATE,
    dni_propietario VARCHAR(9),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

-- Tabla Trabajador
CREATE TABLE IF NOT EXISTS Trabajador (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre VARCHAR(30),
    telefono VARCHAR(20),
    email VARCHAR(100),
    nombreUsuario VARCHAR(20),
    password VARCHAR(100),
    especialidad_trabajador VARCHAR(20),
    isResponsable INTEGER,
    salario DECIMAL(10, 2),
    fecha_contratacion DATE,
    FOREIGN KEY (especialidad_trabajador) REFERENCES Especialidad(nombre)
)

-- Tabla Cita
CREATE TABLE IF NOT EXISTS Cita (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_trabajador INTEGER,
    id_vehiculo INTEGER,
    fecha DATETIME,
    hora VARCHAR(5),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id)
)

-- Tabla Informe
CREATE TABLE IF NOT EXISTS Informe (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    frenado DECIMAL(2, 2),
    frenadoIsApto INTEGER,
    contaminacion DECIMAL(2, 2),
    lucesIsApto INTEGER,
    id_cita INTEGER,
    id_trabajador INTEGER,
    id_vehiculo INT,
    dni_propietario VARCHAR(9),
    isFavorable INTEGER,
    FOREIGN KEY (id_cita) REFERENCES Cita(id),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

04:59:58.936 [Test worker] INFO db.DatabaseManager - Datos iniciales cargados
04:59:58.937 [Test worker] DEBUG db.DatabaseManager - Conexión a la Base de Datos ya establecida
04:59:58.937 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario con parámetros: []
04:59:58.938 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.945 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:58.945 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: INSERT INTO propietario(dni, nombre, apellidos, telefono) VALUES (?, ?, ?, ?) con parámetros: [12345678A, Pepe, Perez, 832464754]
04:59:58.951 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.958 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:58.958 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario WHERE id = ? con parámetros: [1]
04:59:58.958 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.961 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:58.961 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: UPDATE propietario SET dni = ?, nombre = ?, apellidos = ?, telefono = ? WHERE id = ? con parámetros: [12345678B, Juan, Perez, 832464754, 1]
04:59:58.972 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.974 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:58.974 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario WHERE id = ? con parámetros: [2]
04:59:58.975 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
/C:/Users/Sergio/Desktop/FP/2o/EntregasExtraordinarias/Pepilandia/SQLite/build/resources/main/config.properties
04:59:58.983 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
--init-sql--
DROP TABLE IF EXISTS Trabajador

DROP TABLE IF EXISTS Informe

DROP TABLE IF EXISTS Especialidad

DROP TABLE IF EXISTS Propietario

DROP TABLE IF EXISTS Vehiculo

DROP TABLE IF EXISTS Cita

-- Tabla Especialidad
CREATE TABLE IF NOT EXISTS Especialidad (
    nombre VARCHAR(20) PRIMARY KEY,
    salario_base DECIMAL(10, 2)
)

-- Insertar datos en la tabla Especialidad
INSERT INTO Especialidad (nombre, salario_base) VALUES
    ('ELECTRICIDAD', 1800),
    ('MOTOR', 1700),
    ('MECANICA', 1600),
    ('INTERIOR', 1750)

-- Tabla Propietario
CREATE TABLE Propietario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dni VARCHAR(9),
    nombre VARCHAR(30),
    apellidos VARCHAR(100),
    telefono VARCHAR(20)
)

-- Tabla Vehiculo
CREATE TABLE IF NOT EXISTS Vehiculo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    marca VARCHAR(50),
    modelo VARCHAR(50),
    matricula VARCHAR(10),
    fecha_matriculacion DATE,
    fecha_ultima_revision DATE,
    dni_propietario VARCHAR(9),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

-- Tabla Trabajador
CREATE TABLE IF NOT EXISTS Trabajador (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre VARCHAR(30),
    telefono VARCHAR(20),
    email VARCHAR(100),
    nombreUsuario VARCHAR(20),
    password VARCHAR(100),
    especialidad_trabajador VARCHAR(20),
    isResponsable INTEGER,
    salario DECIMAL(10, 2),
    fecha_contratacion DATE,
    FOREIGN KEY (especialidad_trabajador) REFERENCES Especialidad(nombre)
)

-- Tabla Cita
CREATE TABLE IF NOT EXISTS Cita (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_trabajador INTEGER,
    id_vehiculo INTEGER,
    fecha DATETIME,
    hora VARCHAR(5),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id)
)

-- Tabla Informe
CREATE TABLE IF NOT EXISTS Informe (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    frenado DECIMAL(2, 2),
    frenadoIsApto INTEGER,
    contaminacion DECIMAL(2, 2),
    lucesIsApto INTEGER,
    id_cita INTEGER,
    id_trabajador INTEGER,
    id_vehiculo INT,
    dni_propietario VARCHAR(9),
    isFavorable INTEGER,
    FOREIGN KEY (id_cita) REFERENCES Cita(id),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

04:59:58.993 [Test worker] INFO db.DatabaseManager - Datos iniciales cargados
04:59:58.995 [Test worker] DEBUG db.DatabaseManager - Conexión a la Base de Datos ya establecida
04:59:58.996 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario con parámetros: []
04:59:58.996 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:58.998 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:58.998 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: INSERT INTO propietario(dni, nombre, apellidos, telefono) VALUES (?, ?, ?, ?) con parámetros: [12345678A, Pepe, Perez, 832464754]
04:59:59.012 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:59.014 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:59.014 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario WHERE id = ? con parámetros: [1]
04:59:59.015 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
/C:/Users/Sergio/Desktop/FP/2o/EntregasExtraordinarias/Pepilandia/SQLite/build/resources/main/config.properties
04:59:59.021 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
--init-sql--
DROP TABLE IF EXISTS Trabajador

DROP TABLE IF EXISTS Informe

DROP TABLE IF EXISTS Especialidad

DROP TABLE IF EXISTS Propietario

DROP TABLE IF EXISTS Vehiculo

DROP TABLE IF EXISTS Cita

-- Tabla Especialidad
CREATE TABLE IF NOT EXISTS Especialidad (
    nombre VARCHAR(20) PRIMARY KEY,
    salario_base DECIMAL(10, 2)
)

-- Insertar datos en la tabla Especialidad
INSERT INTO Especialidad (nombre, salario_base) VALUES
    ('ELECTRICIDAD', 1800),
    ('MOTOR', 1700),
    ('MECANICA', 1600),
    ('INTERIOR', 1750)

-- Tabla Propietario
CREATE TABLE Propietario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dni VARCHAR(9),
    nombre VARCHAR(30),
    apellidos VARCHAR(100),
    telefono VARCHAR(20)
)

-- Tabla Vehiculo
CREATE TABLE IF NOT EXISTS Vehiculo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    marca VARCHAR(50),
    modelo VARCHAR(50),
    matricula VARCHAR(10),
    fecha_matriculacion DATE,
    fecha_ultima_revision DATE,
    dni_propietario VARCHAR(9),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

-- Tabla Trabajador
CREATE TABLE IF NOT EXISTS Trabajador (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre VARCHAR(30),
    telefono VARCHAR(20),
    email VARCHAR(100),
    nombreUsuario VARCHAR(20),
    password VARCHAR(100),
    especialidad_trabajador VARCHAR(20),
    isResponsable INTEGER,
    salario DECIMAL(10, 2),
    fecha_contratacion DATE,
    FOREIGN KEY (especialidad_trabajador) REFERENCES Especialidad(nombre)
)

-- Tabla Cita
CREATE TABLE IF NOT EXISTS Cita (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_trabajador INTEGER,
    id_vehiculo INTEGER,
    fecha DATETIME,
    hora VARCHAR(5),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id)
)

-- Tabla Informe
CREATE TABLE IF NOT EXISTS Informe (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    frenado DECIMAL(2, 2),
    frenadoIsApto INTEGER,
    contaminacion DECIMAL(2, 2),
    lucesIsApto INTEGER,
    id_cita INTEGER,
    id_trabajador INTEGER,
    id_vehiculo INT,
    dni_propietario VARCHAR(9),
    isFavorable INTEGER,
    FOREIGN KEY (id_cita) REFERENCES Cita(id),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

04:59:59.036 [Test worker] INFO db.DatabaseManager - Datos iniciales cargados
04:59:59.040 [Test worker] DEBUG db.DatabaseManager - Conexión a la Base de Datos ya establecida
04:59:59.040 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario con parámetros: []
04:59:59.040 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:59.049 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:59.050 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: INSERT INTO propietario(dni, nombre, apellidos, telefono) VALUES (?, ?, ?, ?) con parámetros: [12345678A, Pepe, Perez, 832464754]
04:59:59.058 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:59.060 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:59.060 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario WHERE id = ? con parámetros: [1]
04:59:59.061 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
/C:/Users/Sergio/Desktop/FP/2o/EntregasExtraordinarias/Pepilandia/SQLite/build/resources/main/config.properties
04:59:59.063 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
--init-sql--
DROP TABLE IF EXISTS Trabajador

DROP TABLE IF EXISTS Informe

DROP TABLE IF EXISTS Especialidad

DROP TABLE IF EXISTS Propietario

DROP TABLE IF EXISTS Vehiculo

DROP TABLE IF EXISTS Cita

-- Tabla Especialidad
CREATE TABLE IF NOT EXISTS Especialidad (
    nombre VARCHAR(20) PRIMARY KEY,
    salario_base DECIMAL(10, 2)
)

-- Insertar datos en la tabla Especialidad
INSERT INTO Especialidad (nombre, salario_base) VALUES
    ('ELECTRICIDAD', 1800),
    ('MOTOR', 1700),
    ('MECANICA', 1600),
    ('INTERIOR', 1750)

-- Tabla Propietario
CREATE TABLE Propietario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dni VARCHAR(9),
    nombre VARCHAR(30),
    apellidos VARCHAR(100),
    telefono VARCHAR(20)
)

-- Tabla Vehiculo
CREATE TABLE IF NOT EXISTS Vehiculo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    marca VARCHAR(50),
    modelo VARCHAR(50),
    matricula VARCHAR(10),
    fecha_matriculacion DATE,
    fecha_ultima_revision DATE,
    dni_propietario VARCHAR(9),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

-- Tabla Trabajador
CREATE TABLE IF NOT EXISTS Trabajador (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre VARCHAR(30),
    telefono VARCHAR(20),
    email VARCHAR(100),
    nombreUsuario VARCHAR(20),
    password VARCHAR(100),
    especialidad_trabajador VARCHAR(20),
    isResponsable INTEGER,
    salario DECIMAL(10, 2),
    fecha_contratacion DATE,
    FOREIGN KEY (especialidad_trabajador) REFERENCES Especialidad(nombre)
)

-- Tabla Cita
CREATE TABLE IF NOT EXISTS Cita (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_trabajador INTEGER,
    id_vehiculo INTEGER,
    fecha DATETIME,
    hora VARCHAR(5),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id)
)

-- Tabla Informe
CREATE TABLE IF NOT EXISTS Informe (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    frenado DECIMAL(2, 2),
    frenadoIsApto INTEGER,
    contaminacion DECIMAL(2, 2),
    lucesIsApto INTEGER,
    id_cita INTEGER,
    id_trabajador INTEGER,
    id_vehiculo INT,
    dni_propietario VARCHAR(9),
    isFavorable INTEGER,
    FOREIGN KEY (id_cita) REFERENCES Cita(id),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

04:59:59.074 [Test worker] INFO db.DatabaseManager - Datos iniciales cargados
04:59:59.075 [Test worker] DEBUG db.DatabaseManager - Conexión a la Base de Datos ya establecida
04:59:59.075 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario con parámetros: []
04:59:59.076 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:59.077 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:59.078 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: INSERT INTO propietario(dni, nombre, apellidos, telefono) VALUES (?, ?, ?, ?) con parámetros: [12345678A, Pepe, Perez, 832464754]
04:59:59.092 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:59.095 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:59.095 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario WHERE telefono = ? con parámetros: [832464754]
04:59:59.096 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
/C:/Users/Sergio/Desktop/FP/2o/EntregasExtraordinarias/Pepilandia/SQLite/build/resources/main/config.properties
04:59:59.098 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
--init-sql--
DROP TABLE IF EXISTS Trabajador

DROP TABLE IF EXISTS Informe

DROP TABLE IF EXISTS Especialidad

DROP TABLE IF EXISTS Propietario

DROP TABLE IF EXISTS Vehiculo

DROP TABLE IF EXISTS Cita

-- Tabla Especialidad
CREATE TABLE IF NOT EXISTS Especialidad (
    nombre VARCHAR(20) PRIMARY KEY,
    salario_base DECIMAL(10, 2)
)

-- Insertar datos en la tabla Especialidad
INSERT INTO Especialidad (nombre, salario_base) VALUES
    ('ELECTRICIDAD', 1800),
    ('MOTOR', 1700),
    ('MECANICA', 1600),
    ('INTERIOR', 1750)

-- Tabla Propietario
CREATE TABLE Propietario (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dni VARCHAR(9),
    nombre VARCHAR(30),
    apellidos VARCHAR(100),
    telefono VARCHAR(20)
)

-- Tabla Vehiculo
CREATE TABLE IF NOT EXISTS Vehiculo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    marca VARCHAR(50),
    modelo VARCHAR(50),
    matricula VARCHAR(10),
    fecha_matriculacion DATE,
    fecha_ultima_revision DATE,
    dni_propietario VARCHAR(9),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

-- Tabla Trabajador
CREATE TABLE IF NOT EXISTS Trabajador (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nombre VARCHAR(30),
    telefono VARCHAR(20),
    email VARCHAR(100),
    nombreUsuario VARCHAR(20),
    password VARCHAR(100),
    especialidad_trabajador VARCHAR(20),
    isResponsable INTEGER,
    salario DECIMAL(10, 2),
    fecha_contratacion DATE,
    FOREIGN KEY (especialidad_trabajador) REFERENCES Especialidad(nombre)
)

-- Tabla Cita
CREATE TABLE IF NOT EXISTS Cita (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    id_trabajador INTEGER,
    id_vehiculo INTEGER,
    fecha DATETIME,
    hora VARCHAR(5),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id)
)

-- Tabla Informe
CREATE TABLE IF NOT EXISTS Informe (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    frenado DECIMAL(2, 2),
    frenadoIsApto INTEGER,
    contaminacion DECIMAL(2, 2),
    lucesIsApto INTEGER,
    id_cita INTEGER,
    id_trabajador INTEGER,
    id_vehiculo INT,
    dni_propietario VARCHAR(9),
    isFavorable INTEGER,
    FOREIGN KEY (id_cita) REFERENCES Cita(id),
    FOREIGN KEY (id_trabajador) REFERENCES Trabajador(id),
    FOREIGN KEY (id_vehiculo) REFERENCES Vehiculo(id),
    FOREIGN KEY (dni_propietario) REFERENCES Propietario(dni)
)

04:59:59.108 [Test worker] INFO db.DatabaseManager - Datos iniciales cargados
04:59:59.109 [Test worker] DEBUG db.DatabaseManager - Conexión a la Base de Datos ya establecida
04:59:59.109 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario con parámetros: []
04:59:59.109 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:59.111 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:59.111 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: INSERT INTO propietario(dni, nombre, apellidos, telefono) VALUES (?, ?, ?, ?) con parámetros: [12345678A, Pepe, Perez, 832464754]
04:59:59.118 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
04:59:59.121 [Test worker] INFO db.DatabaseManager - Conexión establecida con la base de datos: jdbc:sqlite:Pepilandia.db
04:59:59.121 [Test worker] INFO db.DatabaseManager - Ejecutando consulta: SELECT * FROM propietario WHERE dni = ? con parámetros: [12345678A]
04:59:59.121 [Test worker] INFO db.DatabaseManager - Conexión con la base de datos cerrada
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
